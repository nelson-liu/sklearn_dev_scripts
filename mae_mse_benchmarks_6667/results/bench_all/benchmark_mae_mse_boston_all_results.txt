Profiling MSE DecisionTreeRegressor
         104 function calls in 0.004 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.003    0.003    0.003    0.003 {method 'build' of 'sklearn.tree._tree.DepthFirstTreeBuilder' objects}
        1    0.000    0.000    0.004    0.004 tree.py:114(fit)
        3    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        2    0.000    0.000    0.000    0.000 validation.py:271(check_array)
        8    0.000    0.000    0.000    0.000 {numpy.core.multiarray.array}
        2    0.000    0.000    0.000    0.000 validation.py:49(_assert_all_finite)
        4    0.000    0.000    0.000    0.000 abc.py:128(__instancecheck__)
        1    0.000    0.000    0.000    0.000 validation.py:564(check_random_state)
       17    0.000    0.000    0.000    0.000 {isinstance}
        2    0.000    0.000    0.000    0.000 validation.py:111(_num_samples)
        5    0.000    0.000    0.000    0.000 validation.py:159(<genexpr>)
        1    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
        2    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 validation.py:132(_shape_repr)
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        4    0.000    0.000    0.000    0.000 numeric.py:484(asanyarray)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2180(amax)
        2    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
        8    0.000    0.000    0.000    0.000 {hasattr}
        4    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
        1    0.000    0.000    0.000    0.000 shape_base.py:9(atleast_1d)
        1    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:128(reshape)
       12    0.000    0.000    0.000    0.000 {len}
        7    0.000    0.000    0.000    0.000 {getattr}
        5    0.000    0.000    0.000    0.000 base.py:887(isspmatrix)
        1    0.000    0.000    0.000    0.000 _methods.py:25(_amax)
        1    0.000    0.000    0.000    0.000 {max}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


Profiling MAE DecisionTreeRegressor
         104 function calls in 0.032 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.032    0.032    0.032    0.032 {method 'build' of 'sklearn.tree._tree.DepthFirstTreeBuilder' objects}
        1    0.000    0.000    0.032    0.032 tree.py:114(fit)
        3    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        8    0.000    0.000    0.000    0.000 {numpy.core.multiarray.array}
        2    0.000    0.000    0.000    0.000 validation.py:271(check_array)
        2    0.000    0.000    0.000    0.000 validation.py:49(_assert_all_finite)
        1    0.000    0.000    0.000    0.000 validation.py:564(check_random_state)
        2    0.000    0.000    0.000    0.000 validation.py:111(_num_samples)
       17    0.000    0.000    0.000    0.000 {isinstance}
        4    0.000    0.000    0.000    0.000 abc.py:128(__instancecheck__)
        2    0.000    0.000    0.000    0.000 validation.py:132(_shape_repr)
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
        5    0.000    0.000    0.000    0.000 validation.py:159(<genexpr>)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2180(amax)
        4    0.000    0.000    0.000    0.000 numeric.py:484(asanyarray)
        8    0.000    0.000    0.000    0.000 {hasattr}
        7    0.000    0.000    0.000    0.000 {getattr}
        4    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
        1    0.000    0.000    0.000    0.000 shape_base.py:9(atleast_1d)
        2    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
        2    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:128(reshape)
       12    0.000    0.000    0.000    0.000 {len}
        5    0.000    0.000    0.000    0.000 base.py:887(isspmatrix)
        1    0.000    0.000    0.000    0.000 _methods.py:25(_amax)
        1    0.000    0.000    0.000    0.000 {max}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


Mean Squared Error of DecisionTreeRegressor Trained w/ MSE Criterion: 32.257480315
Mean Squared Error of DecisionTreeRegressor Trained w/ MAE Criterion: 29.117480315
Mean Absolute Error of DecisionTreeRegressor Trained w/ MSE Criterion: 3.50551181102
Mean Absolute Error of DecisionTreeRegressor Trained w/ MAE Criterion: 3.36220472441

Profiling MSE RandomForestRegressor
         23068 function calls (22928 primitive calls) in 0.048 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       10    0.017    0.002    0.017    0.002 {method 'build' of 'sklearn.tree._tree.DepthFirstTreeBuilder' objects}
      240    0.004    0.000    0.011    0.000 collections.py:50(__init__)
     2640    0.003    0.000    0.003    0.000 collections.py:71(__setitem__)
      240    0.002    0.000    0.006    0.000 _abcoll.py:548(update)
       40    0.002    0.000    0.027    0.001 base.py:215(get_params)
       40    0.001    0.000    0.006    0.000 funcsigs.py:512(from_function)
       40    0.001    0.000    0.023    0.001 base.py:188(_get_param_names)
       80    0.001    0.000    0.004    0.000 funcsigs.py:474(__init__)
      480    0.001    0.000    0.002    0.000 funcsigs.py:237(__init__)
      160    0.001    0.000    0.001    0.000 collections.py:125(items)
    80/40    0.001    0.000    0.016    0.000 funcsigs.py:55(signature)
     3360    0.001    0.000    0.001    0.000 collections.py:90(__iter__)
      160    0.001    0.000    0.011    0.000 funcsigs.py:585(parameters)
      120    0.001    0.000    0.001    0.000 collections.py:121(values)
      400    0.001    0.000    0.001    0.000 warnings.py:361(__enter__)
      251    0.001    0.000    0.001    0.000 abc.py:128(__instancecheck__)
      691    0.001    0.000    0.001    0.000 _weakrefset.py:70(__contains__)
      520    0.000    0.000    0.000    0.000 {hasattr}
   110/10    0.000    0.000    0.016    0.002 base.py:36(clone)
      440    0.000    0.000    0.000    0.000 re.py:230(_compile)
      440    0.000    0.000    0.000    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
      400    0.000    0.000    0.001    0.000 warnings.py:96(simplefilter)
     1079    0.000    0.000    0.001    0.000 {isinstance}
      440    0.000    0.000    0.001    0.000 re.py:138(match)
      994    0.000    0.000    0.000    0.000 {getattr}
       10    0.000    0.000    0.017    0.002 tree.py:114(fit)
      400    0.000    0.000    0.000    0.000 warnings.py:377(__exit__)
     1720    0.000    0.000    0.000    0.000 funcsigs.py:266(name)
      400    0.000    0.000    0.000    0.000 warnings.py:340(__init__)
       20    0.000    0.000    0.000    0.000 {method 'randint' of 'mtrand.RandomState' objects}
      100    0.000    0.000    0.001    0.000 copy.py:145(deepcopy)
      480    0.000    0.000    0.000    0.000 funcsigs.py:506(<genexpr>)
      240    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
       10    0.000    0.000    0.018    0.002 forest.py:93(_parallel_build_trees)
       20    0.000    0.000    0.013    0.001 base.py:252(set_params)
     1240    0.000    0.000    0.000    0.000 funcsigs.py:278(kind)
     1136    0.000    0.000    0.000    0.000 {len}
       10    0.000    0.000    0.000    0.000 {cPickle.dumps}
      100    0.000    0.000    0.000    0.000 copy.py:267(_keep_alive)
       21    0.000    0.000    0.000    0.000 validation.py:564(check_random_state)
      410    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        1    0.000    0.000    0.048    0.048 forest.py:214(fit)
      472    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
       40    0.000    0.000    0.002    0.000 funcsigs.py:596(replace)
       10    0.000    0.000    0.022    0.002 base.py:70(_make_estimator)
      400    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
       40    0.000    0.000    0.000    0.000 {sorted}
       40    0.000    0.000    0.000    0.000 funcsigs.py:282(replace)
       11    0.000    0.000    0.019    0.002 parallel.py:596(dispatch_one_batch)
      680    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       12    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       10    0.000    0.000    0.018    0.002 parallel.py:554(_dispatch)
       11    0.000    0.000    0.000    0.000 parallel.py:67(__init__)
       90    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      123    0.000    0.000    0.000    0.000 base.py:887(isspmatrix)
      240    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       27    0.000    0.000    0.000    0.000 {numpy.core.multiarray.array}
       10    0.000    0.000    0.000    0.000 parallel.py:144(delayed)
      120    0.000    0.000    0.000    0.000 {setattr}
       10    0.000    0.000    0.000    0.000 {numpy.core.multiarray.copyto}
        1    0.000    0.000    0.019    0.019 parallel.py:759(__call__)
       30    0.000    0.000    0.000    0.000 six.py:437(iteritems)
       10    0.000    0.000    0.000    0.000 functools.py:17(update_wrapper)
       90    0.000    0.000    0.000    0.000 base.py:77(<genexpr>)
       11    0.000    0.000    0.000    0.000 shape_base.py:9(atleast_1d)
       11    0.000    0.000    0.000    0.000 forest.py:317(<genexpr>)
       10    0.000    0.000    0.000    0.000 {numpy.core.multiarray.bincount}
       10    0.000    0.000    0.000    0.000 tree.py:81(__init__)
       10    0.000    0.000    0.018    0.002 parallel.py:71(__call__)
        1    0.000    0.000    0.000    0.000 parallel.py:714(retrieve)
       10    0.000    0.000    0.000    0.000 tree.py:910(__init__)
      300    0.000    0.000    0.000    0.000 {id}
       10    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}
       10    0.000    0.000    0.000    0.000 numeric.py:148(ones)
       10    0.000    0.000    0.000    0.000 fromnumeric.py:2180(amax)
      100    0.000    0.000    0.000    0.000 copy.py:198(_deepcopy_atomic)
       10    0.000    0.000    0.000    0.000 functools.py:39(wraps)
       10    0.000    0.000    0.000    0.000 forest.py:76(_generate_sample_indices)
       10    0.000    0.000    0.018    0.002 parallel.py:177(__init__)
        2    0.000    0.000    0.000    0.000 validation.py:271(check_array)
       14    0.000    0.000    0.000    0.000 numeric.py:484(asanyarray)
       30    0.000    0.000    0.000    0.000 {method 'iteritems' of 'dict' objects}
       31    0.000    0.000    0.000    0.000 {iter}
        1    0.000    0.000    0.000    0.000 parallel.py:416(__init__)
       31    0.000    0.000    0.000    0.000 parallel.py:74(__len__)
       10    0.000    0.000    0.000    0.000 _methods.py:25(_amax)
        2    0.000    0.000    0.000    0.000 validation.py:49(_assert_all_finite)
       80    0.000    0.000    0.000    0.000 {callable}
       10    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 disk.py:34(memstr_to_kbytes)
        1    0.000    0.000    0.000    0.000 logger.py:39(short_format_time)
        1    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
       10    0.000    0.000    0.000    0.000 parallel.py:160(delayed_function)
       10    0.000    0.000    0.000    0.000 parallel.py:92(_verbosity_filter)
        1    0.000    0.000    0.000    0.000 logger.py:23(_squeeze_time)
        2    0.000    0.000    0.000    0.000 validation.py:132(_shape_repr)
        5    0.000    0.000    0.000    0.000 validation.py:159(<genexpr>)
       11    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       10    0.000    0.000    0.000    0.000 {max}
        1    0.000    0.000    0.000    0.000 parallel.py:483(_initialize_pool)
        2    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 validation.py:111(_num_samples)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:128(reshape)
        1    0.000    0.000    0.000    0.000 parallel.py:471(_effective_n_jobs)
        1    0.000    0.000    0.000    0.000 base.py:55(_validate_estimator)
        2    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 forest.py:339(_validate_y_class_weight)
        1    0.000    0.000    0.000    0.000 parallel.py:546(_terminate_pool)
        1    0.000    0.000    0.000    0.000 {thread.allocate_lock}
       10    0.000    0.000    0.000    0.000 parallel.py:182(get)
        1    0.000    0.000    0.000    0.000 {range}
        1    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 parallel.py:661(_print)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


Profiling MAE RandomForestRegressor
         23068 function calls (22928 primitive calls) in 0.213 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       10    0.183    0.018    0.183    0.018 {method 'build' of 'sklearn.tree._tree.DepthFirstTreeBuilder' objects}
     2640    0.003    0.000    0.003    0.000 collections.py:71(__setitem__)
      240    0.002    0.000    0.008    0.000 collections.py:50(__init__)
      240    0.002    0.000    0.006    0.000 _abcoll.py:548(update)
       40    0.002    0.000    0.022    0.001 base.py:215(get_params)
   110/10    0.002    0.000    0.015    0.001 base.py:36(clone)
       40    0.001    0.000    0.006    0.000 funcsigs.py:512(from_function)
       40    0.001    0.000    0.018    0.000 base.py:188(_get_param_names)
      160    0.001    0.000    0.001    0.000 collections.py:125(items)
       80    0.001    0.000    0.004    0.000 funcsigs.py:474(__init__)
      480    0.001    0.000    0.002    0.000 funcsigs.py:237(__init__)
    80/40    0.001    0.000    0.015    0.000 funcsigs.py:55(signature)
       10    0.001    0.000    0.184    0.018 tree.py:114(fit)
      160    0.001    0.000    0.008    0.000 funcsigs.py:585(parameters)
     3360    0.001    0.000    0.001    0.000 collections.py:90(__iter__)
      120    0.001    0.000    0.001    0.000 collections.py:121(values)
      400    0.001    0.000    0.001    0.000 warnings.py:361(__enter__)
      251    0.001    0.000    0.001    0.000 abc.py:128(__instancecheck__)
      400    0.000    0.000    0.000    0.000 warnings.py:377(__exit__)
       10    0.000    0.000    0.000    0.000 tree.py:81(__init__)
       10    0.000    0.000    0.185    0.019 forest.py:93(_parallel_build_trees)
      691    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
      520    0.000    0.000    0.000    0.000 {hasattr}
      440    0.000    0.000    0.000    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
      400    0.000    0.000    0.001    0.000 warnings.py:96(simplefilter)
     1079    0.000    0.000    0.001    0.000 {isinstance}
      994    0.000    0.000    0.000    0.000 {getattr}
      440    0.000    0.000    0.000    0.000 re.py:230(_compile)
       11    0.000    0.000    0.001    0.000 parallel.py:67(__init__)
      440    0.000    0.000    0.001    0.000 re.py:138(match)
       20    0.000    0.000    0.000    0.000 {method 'randint' of 'mtrand.RandomState' objects}
     1720    0.000    0.000    0.000    0.000 funcsigs.py:266(name)
      480    0.000    0.000    0.000    0.000 funcsigs.py:506(<genexpr>)
      400    0.000    0.000    0.000    0.000 warnings.py:340(__init__)
      100    0.000    0.000    0.001    0.000 copy.py:145(deepcopy)
       10    0.000    0.000    0.000    0.000 {cPickle.dumps}
      240    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
       21    0.000    0.000    0.000    0.000 validation.py:564(check_random_state)
       11    0.000    0.000    0.187    0.017 parallel.py:596(dispatch_one_batch)
     1136    0.000    0.000    0.000    0.000 {len}
       20    0.000    0.000    0.011    0.001 base.py:252(set_params)
      100    0.000    0.000    0.000    0.000 copy.py:267(_keep_alive)
     1240    0.000    0.000    0.000    0.000 funcsigs.py:278(kind)
       10    0.000    0.000    0.186    0.019 parallel.py:554(_dispatch)
      410    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       12    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       10    0.000    0.000    0.021    0.002 base.py:70(_make_estimator)
       40    0.000    0.000    0.000    0.000 funcsigs.py:282(replace)
        1    0.000    0.000    0.213    0.213 forest.py:214(fit)
      680    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       10    0.000    0.000    0.185    0.019 parallel.py:71(__call__)
       40    0.000    0.000    0.000    0.000 {sorted}
      400    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
      472    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
       10    0.000    0.000    0.000    0.000 {numpy.core.multiarray.copyto}
       27    0.000    0.000    0.000    0.000 {numpy.core.multiarray.array}
       10    0.000    0.000    0.000    0.000 parallel.py:144(delayed)
       40    0.000    0.000    0.002    0.000 funcsigs.py:596(replace)
      240    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       11    0.000    0.000    0.001    0.000 forest.py:317(<genexpr>)
       10    0.000    0.000    0.000    0.000 functools.py:17(update_wrapper)
        1    0.000    0.000    0.187    0.187 parallel.py:759(__call__)
       10    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}
      123    0.000    0.000    0.000    0.000 base.py:887(isspmatrix)
       11    0.000    0.000    0.000    0.000 shape_base.py:9(atleast_1d)
       30    0.000    0.000    0.000    0.000 six.py:437(iteritems)
       90    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.000    0.000 parallel.py:714(retrieve)
      120    0.000    0.000    0.000    0.000 {setattr}
       10    0.000    0.000    0.185    0.019 parallel.py:177(__init__)
       10    0.000    0.000    0.001    0.000 tree.py:910(__init__)
       10    0.000    0.000    0.000    0.000 {numpy.core.multiarray.bincount}
       90    0.000    0.000    0.000    0.000 base.py:77(<genexpr>)
       10    0.000    0.000    0.000    0.000 fromnumeric.py:2180(amax)
       10    0.000    0.000    0.000    0.000 numeric.py:148(ones)
       10    0.000    0.000    0.000    0.000 forest.py:76(_generate_sample_indices)
        2    0.000    0.000    0.000    0.000 validation.py:271(check_array)
       10    0.000    0.000    0.000    0.000 functools.py:39(wraps)
       14    0.000    0.000    0.000    0.000 numeric.py:484(asanyarray)
      300    0.000    0.000    0.000    0.000 {id}
       31    0.000    0.000    0.000    0.000 parallel.py:74(__len__)
       10    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 validation.py:49(_assert_all_finite)
       10    0.000    0.000    0.000    0.000 parallel.py:92(_verbosity_filter)
       80    0.000    0.000    0.000    0.000 {callable}
      100    0.000    0.000    0.000    0.000 copy.py:198(_deepcopy_atomic)
       10    0.000    0.000    0.000    0.000 _methods.py:25(_amax)
       30    0.000    0.000    0.000    0.000 {method 'iteritems' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
        1    0.000    0.000    0.000    0.000 logger.py:39(short_format_time)
        1    0.000    0.000    0.000    0.000 parallel.py:416(__init__)
       10    0.000    0.000    0.000    0.000 {max}
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
       11    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
       31    0.000    0.000    0.000    0.000 {iter}
        2    0.000    0.000    0.000    0.000 validation.py:132(_shape_repr)
       10    0.000    0.000    0.000    0.000 parallel.py:182(get)
        1    0.000    0.000    0.000    0.000 disk.py:34(memstr_to_kbytes)
        1    0.000    0.000    0.000    0.000 logger.py:23(_squeeze_time)
        5    0.000    0.000    0.000    0.000 validation.py:159(<genexpr>)
        2    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 validation.py:111(_num_samples)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:128(reshape)
        1    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 parallel.py:160(delayed_function)
        1    0.000    0.000    0.000    0.000 base.py:55(_validate_estimator)
        1    0.000    0.000    0.000    0.000 parallel.py:483(_initialize_pool)
        2    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 parallel.py:661(_print)
        2    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
        1    0.000    0.000    0.000    0.000 parallel.py:546(_terminate_pool)
        1    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 parallel.py:471(_effective_n_jobs)
        1    0.000    0.000    0.000    0.000 {thread.allocate_lock}
        1    0.000    0.000    0.000    0.000 {range}
        1    0.000    0.000    0.000    0.000 forest.py:339(_validate_y_class_weight)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


Mean Squared Error of RandomForestRegressor Trained w/ MSE Criterion: 19.7881511811
Mean Squared Error of RandomForestRegressor Trained w/ MAE Criterion: 17.354603937
Mean Absolute Error of RandomForestRegressor Trained w/ MSE Criterion: 2.62362204724
Mean Absolute Error of RandomForestRegressor Trained w/ MAE Criterion: 2.65125984252

Profiling Friedman MSE GradientBoostingRegressor
         7482 function calls in 0.046 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      100    0.029    0.000    0.029    0.000 {method 'build' of 'sklearn.tree._tree.DepthFirstTreeBuilder' objects}
      100    0.003    0.000    0.036    0.000 tree.py:114(fit)
      100    0.002    0.000    0.002    0.000 {method 'predict' of 'sklearn.tree._tree.Tree' objects}
      100    0.002    0.000    0.003    0.000 gradient_boosting.py:280(__call__)
      100    0.001    0.000    0.042    0.000 gradient_boosting.py:749(_fit_stage)
      305    0.001    0.000    0.001    0.000 {method 'reduce' of 'numpy.ufunc' objects}
      100    0.001    0.000    0.003    0.000 gradient_boosting.py:290(update_terminal_regions)
     1512    0.001    0.000    0.002    0.000 {isinstance}
      311    0.001    0.000    0.001    0.000 {numpy.core.multiarray.array}
      401    0.001    0.000    0.001    0.000 abc.py:128(__instancecheck__)
        1    0.000    0.000    0.045    0.045 gradient_boosting.py:1037(_fit_stages)
      100    0.000    0.000    0.000    0.000 tree.py:81(__init__)
      503    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
      100    0.000    0.000    0.000    0.000 shape_base.py:9(atleast_1d)
      100    0.000    0.000    0.001    0.000 tree.py:910(__init__)
      505    0.000    0.000    0.000    0.000 base.py:887(isspmatrix)
        1    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
      100    0.000    0.000    0.000    0.000 gradient_boosting.py:287(negative_gradient)
      100    0.000    0.000    0.001    0.000 fromnumeric.py:1743(sum)
      100    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
      101    0.000    0.000    0.001    0.000 validation.py:564(check_random_state)
      301    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
      604    0.000    0.000    0.000    0.000 {getattr}
      100    0.000    0.000    0.001    0.000 fromnumeric.py:2180(amax)
      106    0.000    0.000    0.000    0.000 numeric.py:484(asanyarray)
      515    0.000    0.000    0.000    0.000 {len}
      101    0.000    0.000    0.000    0.000 {range}
      204    0.000    0.000    0.001    0.000 _methods.py:31(_sum)
      100    0.000    0.000    0.000    0.000 fromnumeric.py:128(reshape)
      100    0.000    0.000    0.000    0.000 numeric.py:535(ascontiguousarray)
      104    0.000    0.000    0.001    0.000 {method 'sum' of 'numpy.ndarray' objects}
      101    0.000    0.000    0.000    0.000 {max}
      100    0.000    0.000    0.000    0.000 _methods.py:25(_amax)
      101    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.046    0.046 gradient_boosting.py:932(fit)
        5    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}
        1    0.000    0.000    0.000    0.000 function_base.py:857(average)
        2    0.000    0.000    0.000    0.000 arraysetops.py:96(unique)
        1    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
       25    0.000    0.000    0.000    0.000 {hasattr}
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:803(_check_params)
        1    0.000    0.000    0.000    0.000 validation.py:271(check_array)
        2    0.000    0.000    0.000    0.000 validation.py:49(_assert_all_finite)
        4    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:894(_clear_state)
        6    0.000    0.000    0.000    0.000 validation.py:111(_num_samples)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:876(_init_state)
        2    0.000    0.000    0.000    0.000 validation.py:166(check_consistent_length)
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.copyto}
        1    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
        1    0.000    0.000    0.000    0.000 validation.py:650(check_is_fitted)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:98(predict)
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.concatenate}
        1    0.000    0.000    0.000    0.000 validation.py:432(check_X_y)
        1    0.000    0.000    0.000    0.000 validation.py:535(column_or_1d)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:267(__init__)
        2    0.000    0.000    0.000    0.000 numeric.py:148(ones)
        1    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1383(ravel)
        1    0.000    0.000    0.000    0.000 validation.py:132(_shape_repr)
        3    0.000    0.000    0.000    0.000 validation.py:159(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:923(_is_initialized)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:92(fit)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:829(argsort)
        2    0.000    0.000    0.000    0.000 {method 'flatten' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 numeric.py:571(asfortranarray)
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.zeros}
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.result_type}
        1    0.000    0.000    0.000    0.000 _methods.py:37(_any)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:277(init_estimator)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:188(__init__)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:1221(_validate_y)
        2    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 numeric.py:414(asarray)
        1    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 {all}
        1    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        2    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        3    0.000    0.000    0.000    0.000 {issubclass}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1574(shape)


Profiling MAE GradientBoostingRegressor
         7461 function calls in 1.485 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      100    1.453    0.015    1.453    0.015 {method 'build' of 'sklearn.tree._tree.DepthFirstTreeBuilder' objects}
      100    0.007    0.000    1.466    0.015 tree.py:114(fit)
      100    0.004    0.000    0.005    0.000 {method 'predict' of 'sklearn.tree._tree.Tree' objects}
      100    0.003    0.000    1.478    0.015 gradient_boosting.py:749(_fit_stage)
      100    0.003    0.000    0.006    0.000 gradient_boosting.py:280(__call__)
      305    0.003    0.000    0.003    0.000 {method 'reduce' of 'numpy.ufunc' objects}
      100    0.003    0.000    0.007    0.000 gradient_boosting.py:290(update_terminal_regions)
     1512    0.001    0.000    0.003    0.000 {isinstance}
      311    0.001    0.000    0.001    0.000 {numpy.core.multiarray.array}
      401    0.001    0.000    0.002    0.000 abc.py:128(__instancecheck__)
        1    0.001    0.001    1.485    1.485 gradient_boosting.py:1037(_fit_stages)
      501    0.001    0.000    0.001    0.000 _weakrefset.py:70(__contains__)
      100    0.001    0.000    0.001    0.000 shape_base.py:9(atleast_1d)
      100    0.000    0.000    0.000    0.000 tree.py:81(__init__)
      100    0.000    0.000    0.001    0.000 fromnumeric.py:1743(sum)
      100    0.000    0.000    0.001    0.000 tree.py:910(__init__)
      101    0.000    0.000    0.002    0.000 validation.py:564(check_random_state)
      505    0.000    0.000    0.001    0.000 base.py:887(isspmatrix)
      100    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
      100    0.000    0.000    0.001    0.000 fromnumeric.py:2180(amax)
      100    0.000    0.000    0.000    0.000 gradient_boosting.py:287(negative_gradient)
      301    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
      603    0.000    0.000    0.000    0.000 {getattr}
      204    0.000    0.000    0.002    0.000 _methods.py:31(_sum)
      106    0.000    0.000    0.000    0.000 numeric.py:484(asanyarray)
      101    0.000    0.000    0.000    0.000 {range}
      104    0.000    0.000    0.002    0.000 {method 'sum' of 'numpy.ndarray' objects}
      100    0.000    0.000    0.000    0.000 fromnumeric.py:128(reshape)
      100    0.000    0.000    0.001    0.000 numeric.py:535(ascontiguousarray)
      515    0.000    0.000    0.000    0.000 {len}
      100    0.000    0.000    0.001    0.000 _methods.py:25(_amax)
      101    0.000    0.000    0.000    0.000 {max}
      101    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    1.485    1.485 gradient_boosting.py:932(fit)
        5    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}
        2    0.000    0.000    0.000    0.000 arraysetops.py:96(unique)
        1    0.000    0.000    0.000    0.000 function_base.py:857(average)
        1    0.000    0.000    0.000    0.000 validation.py:271(check_array)
        2    0.000    0.000    0.000    0.000 validation.py:49(_assert_all_finite)
       25    0.000    0.000    0.000    0.000 {hasattr}
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:894(_clear_state)
        6    0.000    0.000    0.000    0.000 validation.py:111(_num_samples)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:803(_check_params)
        1    0.000    0.000    0.000    0.000 validation.py:132(_shape_repr)
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.concatenate}
        1    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
        1    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.copyto}
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:876(_init_state)
        2    0.000    0.000    0.000    0.000 validation.py:166(check_consistent_length)
        2    0.000    0.000    0.000    0.000 numeric.py:148(ones)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:98(predict)
        1    0.000    0.000    0.000    0.000 validation.py:650(check_is_fitted)
        1    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 validation.py:535(column_or_1d)
        1    0.000    0.000    0.000    0.000 validation.py:432(check_X_y)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1383(ravel)
        2    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 validation.py:159(<genexpr>)
        2    0.000    0.000    0.000    0.000 {method 'flatten' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:267(__init__)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:92(fit)
        2    0.000    0.000    0.000    0.000 numeric.py:414(asarray)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:923(_is_initialized)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:829(argsort)
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.zeros}
        1    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 numeric.py:571(asfortranarray)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:277(init_estimator)
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.result_type}
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:1221(_validate_y)
        1    0.000    0.000    0.000    0.000 gradient_boosting.py:188(__init__)
        1    0.000    0.000    0.000    0.000 _methods.py:37(_any)
        1    0.000    0.000    0.000    0.000 {all}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1574(shape)


Mean Squared Error of GradientBoostingRegressor Trained w/ Friedman MSE Criterion: 15.0091045221
Mean Squared Error of GradientBoostingRegressor Trained w/ MAE Criterion: 17.4920902086
Mean Absolute Error of GradientBoostingRegressor Trained w/ Friedman MSE Criterion: 2.5279874482
Mean Absolute Error of GradientBoostingRegressor Trained w/ MAE Criterion: 2.57534507477

Profiling MSE ExtraTreesRegressor
         21348 function calls (21218 primitive calls) in 0.033 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       10    0.009    0.001    0.009    0.001 {method 'build' of 'sklearn.tree._tree.DepthFirstTreeBuilder' objects}
     2400    0.003    0.000    0.003    0.000 collections.py:71(__setitem__)
      240    0.002    0.000    0.006    0.000 _abcoll.py:548(update)
       40    0.001    0.000    0.021    0.001 base.py:215(get_params)
      240    0.001    0.000    0.007    0.000 collections.py:50(__init__)
       40    0.001    0.000    0.005    0.000 funcsigs.py:512(from_function)
       40    0.001    0.000    0.017    0.000 base.py:188(_get_param_names)
       80    0.001    0.000    0.004    0.000 funcsigs.py:474(__init__)
      160    0.001    0.000    0.001    0.000 collections.py:125(items)
      440    0.001    0.000    0.002    0.000 funcsigs.py:237(__init__)
    80/40    0.001    0.000    0.014    0.000 funcsigs.py:55(signature)
     3080    0.001    0.000    0.001    0.000 collections.py:90(__iter__)
      160    0.001    0.000    0.007    0.000 funcsigs.py:585(parameters)
      120    0.001    0.000    0.001    0.000 collections.py:121(values)
      360    0.000    0.000    0.000    0.000 warnings.py:361(__enter__)
   100/10    0.000    0.000    0.011    0.001 base.py:36(clone)
      241    0.000    0.000    0.001    0.000 abc.py:128(__instancecheck__)
      681    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
      490    0.000    0.000    0.000    0.000 {hasattr}
      400    0.000    0.000    0.000    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
      360    0.000    0.000    0.001    0.000 warnings.py:96(simplefilter)
      400    0.000    0.000    0.000    0.000 re.py:230(_compile)
      400    0.000    0.000    0.001    0.000 re.py:138(match)
     1009    0.000    0.000    0.001    0.000 {isinstance}
      934    0.000    0.000    0.000    0.000 {getattr}
     1560    0.000    0.000    0.000    0.000 funcsigs.py:266(name)
       10    0.000    0.000    0.010    0.001 tree.py:114(fit)
      360    0.000    0.000    0.000    0.000 warnings.py:377(__exit__)
       90    0.000    0.000    0.000    0.000 copy.py:145(deepcopy)
      360    0.000    0.000    0.000    0.000 warnings.py:340(__init__)
      440    0.000    0.000    0.000    0.000 funcsigs.py:506(<genexpr>)
       20    0.000    0.000    0.011    0.001 base.py:252(set_params)
      240    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
     1120    0.000    0.000    0.000    0.000 funcsigs.py:278(kind)
       90    0.000    0.000    0.000    0.000 copy.py:267(_keep_alive)
     1076    0.000    0.000    0.000    0.000 {len}
      370    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       40    0.000    0.000    0.000    0.000 funcsigs.py:282(replace)
       10    0.000    0.000    0.000    0.000 {method 'randint' of 'mtrand.RandomState' objects}
        1    0.000    0.000    0.033    0.033 forest.py:214(fit)
      360    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
      432    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
       10    0.000    0.000    0.017    0.002 base.py:70(_make_estimator)
       10    0.000    0.000    0.000    0.000 {cPickle.dumps}
       40    0.000    0.000    0.000    0.000 {sorted}
       40    0.000    0.000    0.002    0.000 funcsigs.py:596(replace)
       11    0.000    0.000    0.000    0.000 validation.py:564(check_random_state)
      620    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       12    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       27    0.000    0.000    0.000    0.000 {numpy.core.multiarray.array}
       11    0.000    0.000    0.010    0.001 parallel.py:596(dispatch_one_batch)
      113    0.000    0.000    0.000    0.000 base.py:887(isspmatrix)
       30    0.000    0.000    0.000    0.000 six.py:437(iteritems)
      240    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       90    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       10    0.000    0.000    0.010    0.001 parallel.py:554(_dispatch)
       90    0.000    0.000    0.000    0.000 base.py:77(<genexpr>)
      120    0.000    0.000    0.000    0.000 {setattr}
       11    0.000    0.000    0.000    0.000 parallel.py:67(__init__)
       10    0.000    0.000    0.010    0.001 forest.py:93(_parallel_build_trees)
       10    0.000    0.000    0.000    0.000 functools.py:17(update_wrapper)
       10    0.000    0.000    0.000    0.000 parallel.py:144(delayed)
        1    0.000    0.000    0.010    0.010 parallel.py:759(__call__)
      270    0.000    0.000    0.000    0.000 {id}
        2    0.000    0.000    0.000    0.000 validation.py:271(check_array)
       11    0.000    0.000    0.000    0.000 forest.py:317(<genexpr>)
       11    0.000    0.000    0.000    0.000 shape_base.py:9(atleast_1d)
       10    0.000    0.000    0.000    0.000 tree.py:81(__init__)
        1    0.000    0.000    0.000    0.000 parallel.py:714(retrieve)
       10    0.000    0.000    0.000    0.000 tree.py:1006(__init__)
       10    0.000    0.000    0.010    0.001 parallel.py:71(__call__)
       10    0.000    0.000    0.000    0.000 tree.py:910(__init__)
       10    0.000    0.000    0.000    0.000 fromnumeric.py:2180(amax)
       10    0.000    0.000    0.000    0.000 functools.py:39(wraps)
        2    0.000    0.000    0.000    0.000 validation.py:49(_assert_all_finite)
       10    0.000    0.000    0.010    0.001 parallel.py:177(__init__)
       14    0.000    0.000    0.000    0.000 numeric.py:484(asanyarray)
        1    0.000    0.000    0.000    0.000 parallel.py:416(__init__)
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
       80    0.000    0.000    0.000    0.000 {callable}
       90    0.000    0.000    0.000    0.000 copy.py:198(_deepcopy_atomic)
        5    0.000    0.000    0.000    0.000 validation.py:159(<genexpr>)
       30    0.000    0.000    0.000    0.000 {method 'iteritems' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 validation.py:111(_num_samples)
        2    0.000    0.000    0.000    0.000 validation.py:132(_shape_repr)
       10    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       10    0.000    0.000    0.000    0.000 _methods.py:25(_amax)
        1    0.000    0.000    0.000    0.000 disk.py:34(memstr_to_kbytes)
        1    0.000    0.000    0.000    0.000 logger.py:39(short_format_time)
        2    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       31    0.000    0.000    0.000    0.000 parallel.py:74(__len__)
       11    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       10    0.000    0.000    0.000    0.000 parallel.py:160(delayed_function)
        1    0.000    0.000    0.000    0.000 base.py:55(_validate_estimator)
       10    0.000    0.000    0.000    0.000 {max}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:128(reshape)
        1    0.000    0.000    0.000    0.000 parallel.py:471(_effective_n_jobs)
       31    0.000    0.000    0.000    0.000 {iter}
        1    0.000    0.000    0.000    0.000 parallel.py:483(_initialize_pool)
       10    0.000    0.000    0.000    0.000 parallel.py:92(_verbosity_filter)
        1    0.000    0.000    0.000    0.000 {range}
        1    0.000    0.000    0.000    0.000 logger.py:23(_squeeze_time)
       10    0.000    0.000    0.000    0.000 parallel.py:182(get)
        1    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 parallel.py:661(_print)
        1    0.000    0.000    0.000    0.000 forest.py:339(_validate_y_class_weight)
        1    0.000    0.000    0.000    0.000 parallel.py:546(_terminate_pool)
        1    0.000    0.000    0.000    0.000 {thread.allocate_lock}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


Profiling MAE ExtraTreesRegressor
         21348 function calls (21218 primitive calls) in 0.204 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       10    0.179    0.018    0.179    0.018 {method 'build' of 'sklearn.tree._tree.DepthFirstTreeBuilder' objects}
     2400    0.003    0.000    0.003    0.000 collections.py:71(__setitem__)
      240    0.001    0.000    0.005    0.000 _abcoll.py:548(update)
       40    0.001    0.000    0.020    0.000 base.py:215(get_params)
       10    0.001    0.000    0.181    0.018 tree.py:114(fit)
      240    0.001    0.000    0.007    0.000 collections.py:50(__init__)
       40    0.001    0.000    0.005    0.000 funcsigs.py:512(from_function)
      440    0.001    0.000    0.002    0.000 funcsigs.py:237(__init__)
       40    0.001    0.000    0.016    0.000 base.py:188(_get_param_names)
       80    0.001    0.000    0.004    0.000 funcsigs.py:474(__init__)
      160    0.001    0.000    0.001    0.000 collections.py:125(items)
    80/40    0.001    0.000    0.013    0.000 funcsigs.py:55(signature)
     3080    0.001    0.000    0.001    0.000 collections.py:90(__iter__)
      160    0.001    0.000    0.007    0.000 funcsigs.py:585(parameters)
      120    0.001    0.000    0.001    0.000 collections.py:121(values)
      241    0.000    0.000    0.001    0.000 abc.py:128(__instancecheck__)
      360    0.000    0.000    0.000    0.000 warnings.py:361(__enter__)
       11    0.000    0.000    0.183    0.017 parallel.py:596(dispatch_one_batch)
      400    0.000    0.000    0.000    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
      490    0.000    0.000    0.000    0.000 {hasattr}
      681    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
     1009    0.000    0.000    0.001    0.000 {isinstance}
      360    0.000    0.000    0.001    0.000 warnings.py:96(simplefilter)
   100/10    0.000    0.000    0.010    0.001 base.py:36(clone)
      400    0.000    0.000    0.001    0.000 re.py:138(match)
      400    0.000    0.000    0.000    0.000 re.py:230(_compile)
      934    0.000    0.000    0.000    0.000 {getattr}
     1560    0.000    0.000    0.000    0.000 funcsigs.py:266(name)
       10    0.000    0.000    0.000    0.000 {cPickle.dumps}
      360    0.000    0.000    0.000    0.000 warnings.py:377(__exit__)
      440    0.000    0.000    0.000    0.000 funcsigs.py:506(<genexpr>)
      360    0.000    0.000    0.000    0.000 warnings.py:340(__init__)
       90    0.000    0.000    0.000    0.000 copy.py:145(deepcopy)
      240    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
     1120    0.000    0.000    0.000    0.000 funcsigs.py:278(kind)
       20    0.000    0.000    0.011    0.001 base.py:252(set_params)
     1076    0.000    0.000    0.000    0.000 {len}
       11    0.000    0.000    0.000    0.000 validation.py:564(check_random_state)
       10    0.000    0.000    0.182    0.018 forest.py:93(_parallel_build_trees)
       12    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       90    0.000    0.000    0.000    0.000 copy.py:267(_keep_alive)
       27    0.000    0.000    0.000    0.000 {numpy.core.multiarray.array}
       10    0.000    0.000    0.182    0.018 parallel.py:554(_dispatch)
       11    0.000    0.000    0.001    0.000 parallel.py:67(__init__)
       10    0.000    0.000    0.016    0.002 base.py:70(_make_estimator)
      370    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
      360    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
       40    0.000    0.000    0.000    0.000 funcsigs.py:282(replace)
       10    0.000    0.000    0.000    0.000 {method 'randint' of 'mtrand.RandomState' objects}
        1    0.000    0.000    0.204    0.204 forest.py:214(fit)
       40    0.000    0.000    0.000    0.000 {sorted}
      432    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
       11    0.000    0.000    0.001    0.000 forest.py:317(<genexpr>)
      620    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       10    0.000    0.000    0.001    0.000 parallel.py:144(delayed)
       10    0.000    0.000    0.182    0.018 parallel.py:71(__call__)
       10    0.000    0.000    0.000    0.000 functools.py:17(update_wrapper)
       40    0.000    0.000    0.002    0.000 funcsigs.py:596(replace)
      113    0.000    0.000    0.000    0.000 base.py:887(isspmatrix)
       30    0.000    0.000    0.000    0.000 six.py:437(iteritems)
        1    0.000    0.000    0.183    0.183 parallel.py:759(__call__)
       11    0.000    0.000    0.000    0.000 shape_base.py:9(atleast_1d)
       90    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      120    0.000    0.000    0.000    0.000 {setattr}
       10    0.000    0.000    0.182    0.018 parallel.py:177(__init__)
       10    0.000    0.000    0.000    0.000 fromnumeric.py:2180(amax)
       90    0.000    0.000    0.000    0.000 base.py:77(<genexpr>)
      240    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       10    0.000    0.000    0.000    0.000 functools.py:39(wraps)
        1    0.000    0.000    0.000    0.000 parallel.py:714(retrieve)
      270    0.000    0.000    0.000    0.000 {id}
       10    0.000    0.000    0.000    0.000 tree.py:1006(__init__)
       10    0.000    0.000    0.000    0.000 tree.py:910(__init__)
       14    0.000    0.000    0.000    0.000 numeric.py:484(asanyarray)
        2    0.000    0.000    0.000    0.000 validation.py:271(check_array)
       10    0.000    0.000    0.000    0.000 tree.py:81(__init__)
       90    0.000    0.000    0.000    0.000 copy.py:198(_deepcopy_atomic)
       30    0.000    0.000    0.000    0.000 {method 'iteritems' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 validation.py:49(_assert_all_finite)
       31    0.000    0.000    0.000    0.000 parallel.py:74(__len__)
       10    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       10    0.000    0.000    0.000    0.000 parallel.py:92(_verbosity_filter)
        1    0.000    0.000    0.000    0.000 parallel.py:416(__init__)
       80    0.000    0.000    0.000    0.000 {callable}
       10    0.000    0.000    0.000    0.000 _methods.py:25(_amax)
        2    0.000    0.000    0.000    0.000 validation.py:132(_shape_repr)
        1    0.000    0.000    0.000    0.000 logger.py:39(short_format_time)
       10    0.000    0.000    0.000    0.000 {max}
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
       11    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 disk.py:34(memstr_to_kbytes)
        2    0.000    0.000    0.000    0.000 validation.py:111(_num_samples)
       31    0.000    0.000    0.000    0.000 {iter}
        5    0.000    0.000    0.000    0.000 validation.py:159(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       10    0.000    0.000    0.000    0.000 parallel.py:160(delayed_function)
        1    0.000    0.000    0.000    0.000 logger.py:23(_squeeze_time)
        2    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 parallel.py:471(_effective_n_jobs)
        1    0.000    0.000    0.000    0.000 base.py:55(_validate_estimator)
        1    0.000    0.000    0.000    0.000 parallel.py:483(_initialize_pool)
        1    0.000    0.000    0.000    0.000 parallel.py:661(_print)
        2    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 forest.py:339(_validate_y_class_weight)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:128(reshape)
        1    0.000    0.000    0.000    0.000 parallel.py:546(_terminate_pool)
        1    0.000    0.000    0.000    0.000 {thread.allocate_lock}
       10    0.000    0.000    0.000    0.000 parallel.py:182(get)
        1    0.000    0.000    0.000    0.000 {range}
        1    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


Mean Squared Error of ExtraTreesRegressor Trained w/ MSE Criterion: 22.7431417323
Mean Squared Error of ExtraTreesRegressor Trained w/ MAE Criterion: 18.5299811024
Mean Absolute Error of ExtraTreesRegressor Trained w/ MSE Criterion: 2.70251968504
Mean Absolute Error of ExtraTreesRegressor Trained w/ MAE Criterion: 2.58818897638

